from dijkstra import dijkstra


def test_dijkstra():
    input_data = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 1, 1, 1, 1, 2, 2, 100],
        [100, 1, 0, 4, 1, 2, 2, 100],
        [100, 9, 4, 2, 1, 1, 1, 100],
        [100, 9, 9, 6, 4, 1, 1, 100],
        [100, 9, 9, 0, 4, 1, 1, 100],
        [100, 9, 9, 1, 1, 1, 1, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    dist = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    expected = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 2, 1, 2, 3, 5, 7, 100],
        [100, 1, 0, 4, 4, 6, 8, 100],
        [100, 10, 4, 6, 5, 6, 7, 100],
        [100, 19, 13, 12, 9, 7, 8, 100],
        [100, 28, 20, 11, 12, 8, 9, 100],
        [100, 29, 20, 11, 10, 9, 10, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    answer = dijkstra(input_data, dist, (2, 2))
    assert answer == expected


def test_dijkstra_smaller_table():
    input_data = [
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 9, 9, 9, 9, 9, 9, 9, 100],
        [100, 9, 9, 9, 0, 9, 9, 9, 100],
        [100, 9, 9, 9, 1, 9, 9, 9, 100],
        [100, 9, 9, 9, 1, 9, 9, 9, 100],
        [100, 9, 9, 9, 1, 9, 9, 9, 100],
        [100, 9, 9, 9, 0, 9, 9, 9, 100],
        [100, 9, 9, 9, 9, 9, 9, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100]
    ]

    dist = [
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100]
    ]

    expected = [
        [100, 100, 100, 100, 100, 100, 100, 100, 100],
        [100, 36, 27, 18, 9, 18, 27, 36, 100],
        [100, 27, 18, 9, 0, 9, 18, 27, 100],
        [100, 28, 19, 10, 1, 10, 19, 28, 100],
        [100, 29, 20, 11, 2, 11, 20, 29, 100],
        [100, 30, 21, 12, 3, 12, 21, 30, 100],
        [100, 30, 21, 12, 3, 12, 21, 30, 100],
        [100, 39, 30, 21, 12, 21, 30, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100, 100]
    ]

    answer = dijkstra(input_data, dist, (2, 4))
    assert answer == expected


def test_dijkstra_path_on_boarders():
    input_data = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 0, 1, 1, 1, 1, 1, 100],
        [100, 1, 9, 4, 9, 2, 1, 100],
        [100, 9, 4, 2, 1, 1, 1, 100],
        [100, 9, 9, 6, 4, 1, 1, 100],
        [100, 9, 9, 9, 4, 1, 1, 100],
        [100, 9, 9, 1, 1, 1, 0, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    dist = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    expected = [
        [100, 100, 100, 100, 100, 100, 100, 100],
        [100, 0, 1, 2, 3, 4, 5, 100],
        [100, 1, 10, 6, 12, 6, 6, 100],
        [100, 10, 12, 8, 8, 7, 7, 100],
        [100, 19, 21, 14, 12, 8, 8, 100],
        [100, 28, 30, 21, 13, 9, 9, 100],
        [100, 30, 21, 12, 11, 10, 9, 100],
        [100, 100, 100, 100, 100, 100, 100, 100]
    ]

    answer = dijkstra(input_data, dist, (1, 1))
    assert answer == expected
